{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      customers: [],\n      selectedCustomerId: null,\n      startDate: '',\n      endDate: '',\n      transactions: []\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get('http://localhost:8888/customers');\n        this.customers = response.data;\n      } catch (error) {\n        console.error('無法取得客戶資料', error);\n      }\n    },\n    // 查詢指定客戶及時間範圍的交易紀錄\n    async fetchCustomerTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:8888/transactions/${this.selectedCustomerId}`, {\n          params: {\n            startDate: this.startDate,\n            endDate: this.endDate\n          }\n        });\n        this.transactions = response.data; // 使用正確格式解析資料\n      } catch (error) {\n        alert(`查詢失敗: ${error.response?.data?.error || '伺服器錯誤'}`);\n        console.error('查詢交易紀錄失敗', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","customers","selectedCustomerId","startDate","endDate","transactions","mounted","fetchCustomers","methods","response","get","error","console","fetchCustomerTransactions","params","alert"],"sources":["/app/src/components/TransactionPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>客戶資料</h1>\n\n    <!-- 交易紀錄查詢表單 -->\n    <h2>查詢客戶交易紀錄</h2>\n    <form @submit.prevent=\"fetchCustomerTransactions\">\n      <div>\n        <label for=\"customerSelect\">選擇客戶</label>\n        <select v-model=\"selectedCustomerId\" id=\"customerSelect\" required>\n          <option v-for=\"customer in customers\" :key=\"customer.id\" :value=\"customer.id\">\n            {{ customer.name }}\n          </option>\n        </select>\n      </div>\n      <div>\n        <label for=\"startDate\">開始日期</label>\n        <input type=\"date\" id=\"startDate\" v-model=\"startDate\" required />\n      </div>\n      <div>\n        <label for=\"endDate\">結束日期</label>\n        <input type=\"date\" id=\"endDate\" v-model=\"endDate\" required />\n      </div>\n      <button type=\"submit\">查詢交易紀錄</button>\n    </form>\n\n    <!-- 顯示交易紀錄 -->\n    <table v-if=\"transactions.length > 0\">\n      <thead>\n        <tr>\n          <th>客戶</th>\n          <th>交易日期</th>\n          <th>金額</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"transaction in transactions\" :key=\"transaction.id\">\n          <td>{{ transaction.id }}</td>\n          <td>{{ transaction.date }}</td>\n          <td>{{ transaction.amount }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <p v-else>尚未查詢到交易紀錄</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      selectedCustomerId: null,\n      startDate: '',\n      endDate: '',\n      transactions: [],\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get('http://localhost:8888/customers');\n        this.customers = response.data;\n      } catch (error) {\n        console.error('無法取得客戶資料', error);\n      }\n    },\n\n    // 查詢指定客戶及時間範圍的交易紀錄\n    async fetchCustomerTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:8888/transactions/${this.selectedCustomerId}`, {\n          params: {\n            startDate: this.startDate,\n            endDate: this.endDate,\n          },\n        });\n        this.transactions = response.data; // 使用正確格式解析資料\n      } catch (error) {\n        alert(`查詢失敗: ${error.response?.data?.error || '伺服器錯誤'}`);\n        console.error('查詢交易紀錄失敗', error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AAiDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,kBAAkB,EAAE,IAAI;MACxBC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;QACnE,IAAI,CAACT,SAAQ,GAAIQ,QAAQ,CAACT,IAAI;MAChC,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF,CAAC;IAED;IACA,MAAME,yBAAyBA,CAAA,EAAG;MAChC,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,sCAAsC,IAAI,CAACR,kBAAkB,EAAE,EAAE;UAChGY,MAAM,EAAE;YACNX,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBC,OAAO,EAAE,IAAI,CAACA;UAChB;QACF,CAAC,CAAC;QACF,IAAI,CAACC,YAAW,GAAII,QAAQ,CAACT,IAAI,EAAE;MACrC,EAAE,OAAOW,KAAK,EAAE;QACdI,KAAK,CAAC,SAASJ,KAAK,CAACF,QAAQ,EAAET,IAAI,EAAEW,KAAI,IAAK,OAAO,EAAE,CAAC;QACxDC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
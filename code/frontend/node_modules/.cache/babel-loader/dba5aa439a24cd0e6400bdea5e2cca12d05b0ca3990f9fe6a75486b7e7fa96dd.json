{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"h1\", null, \"客戶資料\", -1 /* HOISTED */)), _createCommentVNode(\" 新增客戶表單 \"), _cache[15] || (_cache[15] = _createElementVNode(\"h2\", null, \"新增客戶\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitNewCustomer && $options.submitNewCustomer(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"name\"\n  }, \"名稱\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCustomer.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.name]])]), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"電子郵件\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newCustomer.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.email]])]), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"新增客戶\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"table\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"客戶名稱\"), _createElementVNode(\"th\", null, \"電子郵件\"), _createElementVNode(\"th\", null, \"去年總交易金額\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: customer.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(customer.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.total_amount_last_year), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editCustomer(customer)\n    }, \"編輯\", 8 /* PROPS */, _hoisted_1)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 編輯客戶資料表單 \"), $data.editingCustomer ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[13] || (_cache[13] = _createElementVNode(\"h3\", null, \"編輯客戶\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.submitUpdate && $options.submitUpdate(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"editName\"\n  }, \"名稱\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"editName\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.editingCustomer.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editingCustomer.name]])]), _createElementVNode(\"div\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"editEmail\"\n  }, \"電子郵件\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"editEmail\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.editingCustomer.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editingCustomer.email]])]), _cache[12] || (_cache[12] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"更新資料\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","submitNewCustomer","for","type","id","$event","$data","newCustomer","name","required","email","_Fragment","_renderList","customers","customer","_toDisplayString","total_amount_last_year","onClick","editCustomer","_hoisted_1","editingCustomer","_hoisted_2","submitUpdate"],"sources":["/app/src/components/CustomerPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>客戶資料</h1>\n\n    <!-- 新增客戶表單 -->\n    <h2>新增客戶</h2>\n    <form @submit.prevent=\"submitNewCustomer\">\n      <div>\n        <label for=\"name\">名稱</label>\n        <input type=\"text\" id=\"name\" v-model=\"newCustomer.name\" required />\n      </div>\n      <div>\n        <label for=\"email\">電子郵件</label>\n        <input type=\"email\" id=\"email\" v-model=\"newCustomer.email\" required />\n      </div>\n      <button type=\"submit\">新增客戶</button>\n    </form>\n\n    <table>\n      <thead>\n        <tr>\n          <th>客戶名稱</th>\n          <th>電子郵件</th>\n          <th>去年總交易金額</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"customer in customers\" :key=\"customer.id\">\n          <td>{{ customer.name }}</td>\n          <td>{{ customer.email }}</td>\n          <td>{{ customer.total_amount_last_year }}</td>\n          <td>\n            <button @click=\"editCustomer(customer)\">編輯</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- 編輯客戶資料表單 -->\n    <div v-if=\"editingCustomer\">\n      <h3>編輯客戶</h3>\n      <form @submit.prevent=\"submitUpdate\">\n        <div>\n          <label for=\"editName\">名稱</label>\n          <input type=\"text\" id=\"editName\" v-model=\"editingCustomer.name\" required />\n        </div>\n        <div>\n          <label for=\"editEmail\">電子郵件</label>\n          <input type=\"email\" id=\"editEmail\" v-model=\"editingCustomer.email\" required />\n        </div>\n        <button type=\"submit\">更新資料</button>\n      </form>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: \"\",\n        email: \"\",\n      },  // 用來綁定新增客戶表單的資料\n      editingCustomer: null,\n      isUpdating: false,\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get(\"http://localhost:8888/customers\");\n        this.customers = response.data;\n      } catch (error) {\n        console.error(\"無法取得客戶資料\", error);\n      }\n    },\n\n    // 提交新增的客戶資料\n    async submitNewCustomer() {\n      try {\n        await axios.post(\"http://localhost:8888/customers\", this.newCustomer);\n        alert(\"新增成功！\");\n        //const response = await axios.post(\"http://localhost:8888/customers\", this.newCustomer);\n        //console.log(response.data);  // 可以查看返回的資料\n        this.fetchCustomers();  // 重新獲取最新的客戶資料\n        this.newCustomer = { name: \"\", email: \"\" };  // 重置新增表單\n      } catch (error) {\n        console.error(\"新增失敗\", error);\n      }\n    },\n\n    // 設定為編輯模式\n    editCustomer(customer) {\n      this.editingCustomer = { ...customer };  // 深拷貝以免直接改變原資料\n      console.log(this.editingCustomer);\n    },\n\n    // 提交更新的客戶資料\n    async submitUpdate() {\n      this.isUpdating = true; // 開始更新\n      try {\n        await axios.put(\n          `http://localhost:8888/customers/${this.editingCustomer.id}`,\n          this.editingCustomer\n        );\n\n        await this.fetchCustomers(); // 重新獲取最新資料\n\n        alert(\"更新成功！\");\n        this.editingCustomer = null; // 清除編輯狀態\n      } catch (error) {\n        console.error(\"更新失敗\", error);\n      } finally {\n        this.isUpdating = false; // 結束更新\n      }\n    },\n\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
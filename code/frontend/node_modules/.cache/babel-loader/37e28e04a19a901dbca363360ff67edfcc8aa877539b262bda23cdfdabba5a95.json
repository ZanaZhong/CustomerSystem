{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"客戶清單\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: customer.id\n    }, [_createTextVNode(_toDisplayString(customer.name) + \" (\" + _toDisplayString(customer.email) + \") - 過去一年總金額: \" + _toDisplayString(customer.total_amount_last_year) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.editCustomer(customer)\n    }, \"編輯\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"新增客戶\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.addCustomer && $options.addCustomer(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCustomer.name = $event),\n    placeholder: \"姓名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newCustomer.email = $event),\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.email]]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"新增\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.editMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"修改客戶\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.updateCustomer && $options.updateCustomer(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.currentCustomer.name = $event),\n    placeholder: \"姓名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentCustomer.name]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.currentCustomer.email = $event),\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentCustomer.email]]), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"更新\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","customers","customer","id","_createTextVNode","_toDisplayString","name","email","total_amount_last_year","onClick","$event","$options","editCustomer","_hoisted_1","onSubmit","_cache","_withModifiers","args","addCustomer","newCustomer","placeholder","type","editMode","_hoisted_2","updateCustomer","currentCustomer","_createCommentVNode"],"sources":["/Users/zana/Pretest/code/frontend/src/components/CustomerPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>客戶清單</h1>\n    <ul>\n      <li v-for=\"customer in customers\" :key=\"customer.id\">\n        {{ customer.name }} ({{ customer.email }}) - 過去一年總金額: {{ customer.total_amount_last_year }}\n        <button @click=\"editCustomer(customer)\">編輯</button>\n      </li>\n    </ul>\n    <h2>新增客戶</h2>\n    <form @submit.prevent=\"addCustomer\">\n      <input v-model=\"newCustomer.name\" placeholder=\"姓名\" />\n      <input v-model=\"newCustomer.email\" placeholder=\"Email\" />\n      <button type=\"submit\">新增</button>\n    </form>\n    <div v-if=\"editMode\">\n      <h2>修改客戶</h2>\n      <form @submit.prevent=\"updateCustomer\">\n        <input v-model=\"currentCustomer.name\" placeholder=\"姓名\" />\n        <input v-model=\"currentCustomer.email\" placeholder=\"Email\" />\n        <button type=\"submit\">更新</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '../axios';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: { name: '', email: '' },\n      currentCustomer: null,\n      editMode: false,\n    };\n  },\n  methods: {\n    fetchCustomers() {\n      axios.get('/customers').then((response) => {\n        this.customers = response.data;\n      });\n    },\n    addCustomer() {\n      axios.post('/customers', this.newCustomer).then(() => {\n        this.newCustomer = { name: '', email: '' };\n        this.fetchCustomers();\n      });\n    },\n    editCustomer(customer) {\n      this.currentCustomer = { ...customer };\n      this.editMode = true;\n    },\n    updateCustomer() {\n      axios.put(`/customers/${this.currentCustomer.id}`, this.currentCustomer).then(() => {\n        this.currentCustomer = null;\n        this.editMode = false;\n        this.fetchCustomers();\n      });\n    },\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n};\n</script>\n"],"mappings":";mBAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAsBM,c,0BArBJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAKK,c,kBAJHD,mBAAA,CAGKE,SAAA,QAPXC,WAAA,CAI6BC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAAnBN,mBAAA,CAGK;MAH8BD,GAAG,EAAEO,QAAQ,CAACC;QAJvDC,gBAAA,CAAAC,gBAAA,CAKWH,QAAQ,CAACI,IAAI,IAAG,IAAE,GAAAD,gBAAA,CAAGH,QAAQ,CAACK,KAAK,IAAG,eAAa,GAAAF,gBAAA,CAAGH,QAAQ,CAACM,sBAAsB,IAAG,GAC3F,iBAAAX,mBAAA,CAAmD;MAA1CY,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY,CAACV,QAAQ;OAAG,IAAE,iBANlDW,UAAA,E;gEASIhB,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAIO;IAJAiB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAVjBC,cAAA,KAAAC,IAAA,KAU2BN,QAAA,CAAAO,WAAA,IAAAP,QAAA,CAAAO,WAAA,IAAAD,IAAA,CAAW;sBAChCpB,mBAAA,CAAqD;IAX3D,uBAAAkB,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAWsBV,KAAA,CAAAmB,WAAW,CAACb,IAAI,GAAAI,MAAA;IAAEU,WAAW,EAAC;iDAA9BpB,KAAA,CAAAmB,WAAW,CAACb,IAAI,E,mBAChCT,mBAAA,CAAyD;IAZ/D,uBAAAkB,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAYsBV,KAAA,CAAAmB,WAAW,CAACZ,KAAK,GAAAG,MAAA;IAAEU,WAAW,EAAC;iDAA/BpB,KAAA,CAAAmB,WAAW,CAACZ,KAAK,E,6BACjCV,mBAAA,CAAiC;IAAzBwB,IAAI,EAAC;EAAQ,GAAC,IAAE,qB,4BAEfrB,KAAA,CAAAsB,QAAQ,I,cAAnB1B,mBAAA,CAOM,OAtBV2B,UAAA,G,0BAgBM1B,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAIO;IAJAiB,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAjBnBC,cAAA,KAAAC,IAAA,KAiB6BN,QAAA,CAAAa,cAAA,IAAAb,QAAA,CAAAa,cAAA,IAAAP,IAAA,CAAc;sBACnCpB,mBAAA,CAAyD;IAlBjE,uBAAAkB,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAkBwBV,KAAA,CAAAyB,eAAe,CAACnB,IAAI,GAAAI,MAAA;IAAEU,WAAW,EAAC;iDAAlCpB,KAAA,CAAAyB,eAAe,CAACnB,IAAI,E,mBACpCT,mBAAA,CAA6D;IAnBrE,uBAAAkB,MAAA,QAAAA,MAAA,MAAAL,MAAA,IAmBwBV,KAAA,CAAAyB,eAAe,CAAClB,KAAK,GAAAG,MAAA;IAAEU,WAAW,EAAC;iDAAnCpB,KAAA,CAAAyB,eAAe,CAAClB,KAAK,E,6BACrCV,mBAAA,CAAiC;IAAzBwB,IAAI,EAAC;EAAQ,GAAC,IAAE,qB,gCApBhCK,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", null, \"客戶資料\", -1 /* HOISTED */)), _createCommentVNode(\" 新增客戶表單 \"), _cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"新增客戶\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitNewCustomer && $options.submitNewCustomer(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"name\"\n  }, \"名稱\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newCustomer.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.name]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"電子郵件\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newCustomer.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newCustomer.email]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"新增客戶\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"table\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"客戶名稱\"), _createElementVNode(\"th\", null, \"電子郵件\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: customer.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(customer.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.email), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editCustomer(customer)\n    }, \"編輯\", 8 /* PROPS */, _hoisted_1)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","submitNewCustomer","for","type","$event","$data","newCustomer","name","required","email","_Fragment","_renderList","customers","customer","key","id","_toDisplayString","onClick","editCustomer","_hoisted_1"],"sources":["/Users/zana/Pretest/code/frontend/src/components/CustomerPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>客戶資料</h1>\n\n    <!-- 新增客戶表單 -->\n    <h2>新增客戶</h2>\n    <form @submit.prevent=\"submitNewCustomer\">\n      <div>\n        <label for=\"name\">名稱</label>\n        <input type=\"text\" v-model=\"newCustomer.name\" required />\n      </div>\n      <div>\n        <label for=\"email\">電子郵件</label>\n        <input type=\"email\" v-model=\"newCustomer.email\" required />\n      </div>\n      <button type=\"submit\">新增客戶</button>\n    </form>\n\n    <table>\n      <thead>\n        <tr>\n          <th>客戶名稱</th>\n          <th>電子郵件</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"customer in customers\" :key=\"customer.id\">\n          <td>{{ customer.name }}</td>\n          <td>{{ customer.email }}</td>\n          <td>\n            <button @click=\"editCustomer(customer)\">編輯</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: \"\",\n        email: \"\",\n      },  // 用來綁定新增客戶表單的資料\n      editingCustomer: null,\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get(\"http://localhost:8888/customers\");\n        this.customers = response.data;\n      } catch (error) {\n        console.error(\"無法取得客戶資料\", error);\n      }\n    },\n\n    // 提交新增的客戶資料\n    async submitNewCustomer() {\n      try {\n        const response = await axios.post(\"http://localhost:8888/customers\", this.newCustomer);\n        console.log(response.data);  // 可以查看返回的資料\n        alert(\"新增成功！\");\n        this.fetchCustomers();  // 重新獲取最新的客戶資料\n        this.newCustomer = { name: \"\", email: \"\" };  // 重置新增表單\n      } catch (error) {\n        console.error(\"新增失敗\", error);\n      }\n    },\n\n    // 設定為編輯模式\n    editCustomer(customer) {\n      this.editingCustomer = { ...customer };  // 深拷貝以免直接改變原資料\n    },\n\n    // 提交更新的客戶資料\n    async submitUpdate() {\n      try {\n        await axios.put(\n          `http://localhost:8888/customers/${this.editingCustomer.id}`,\n          this.editingCustomer\n        );\n        alert(\"更新成功！\");\n        this.fetchCustomers(); // 重新獲取最新的客戶資料\n        this.editingCustomer = null; // 清除編輯狀態\n      } catch (error) {\n        console.error(\"更新失敗\", error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";mBAAA;;uBACEA,mBAAA,CAmCM,c,0BAlCJC,mBAAA,CAAa,YAAT,MAAI,sBAERC,mBAAA,YAAe,E,0BACfD,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAUO;IAVAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MANjBC,cAAA,KAAAC,IAAA,KAM2BC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;MACtCL,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA4B;IAArBQ,GAAG,EAAC;EAAM,GAAC,IAAE,sB,gBACpBR,mBAAA,CAAyD;IAAlDS,IAAI,EAAC,MAAM;IAT1B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IASoCC,KAAA,CAAAC,WAAW,CAACC,IAAI,GAAAH,MAAA;IAAEI,QAAQ,EAAR;iDAAlBH,KAAA,CAAAC,WAAW,CAACC,IAAI,E,KAE9Cb,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA+B;IAAxBQ,GAAG,EAAC;EAAO,GAAC,MAAI,sB,gBACvBR,mBAAA,CAA2D;IAApDS,IAAI,EAAC,OAAO;IAb3B,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAaqCC,KAAA,CAAAC,WAAW,CAACG,KAAK,GAAAL,MAAA;IAAEI,QAAQ,EAAR;iDAAnBH,KAAA,CAAAC,WAAW,CAACG,KAAK,E,+BAEhDf,mBAAA,CAAmC;IAA3BS,IAAI,EAAC;EAAQ,GAAC,MAAI,qB,4BAG5BT,mBAAA,CAiBQ,gB,0BAhBNA,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAW,YAAP,IAAE,E,wBAGVA,mBAAA,CAQQ,iB,kBAPND,mBAAA,CAMKiB,SAAA,QAjCbC,WAAA,CA2B+BN,KAAA,CAAAO,SAAS,EAArBC,QAAQ;yBAAnBpB,mBAAA,CAMK;MAN8BqB,GAAG,EAAED,QAAQ,CAACE;QAC/CrB,mBAAA,CAA4B,YAAAsB,gBAAA,CAArBH,QAAQ,CAACN,IAAI,kBACpBb,mBAAA,CAA6B,YAAAsB,gBAAA,CAAtBH,QAAQ,CAACJ,KAAK,kBACrBf,mBAAA,CAEK,aADHA,mBAAA,CAAmD;MAA1CuB,OAAK,EAAAb,MAAA,IAAEJ,QAAA,CAAAkB,YAAY,CAACL,QAAQ;OAAG,IAAE,iBA/BtDM,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
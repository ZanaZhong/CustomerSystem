{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: \"\",\n        email: \"\"\n      },\n      // 用來綁定新增客戶表單的資料\n      editingCustomer: null\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get(\"http://localhost:8888/customers\");\n        this.customers = response.data;\n      } catch (error) {\n        console.error(\"無法取得客戶資料\", error);\n      }\n    },\n    // 提交新增的客戶資料\n    async submitNewCustomer() {\n      try {\n        await axios.post(\"http://localhost:8888/customers\", this.newCustomer);\n        alert(\"新增成功！\");\n        //const response = await axios.post(\"http://localhost:8888/customers\", this.newCustomer);\n        //console.log(response.data);  // 可以查看返回的資料\n        this.fetchCustomers(); // 重新獲取最新的客戶資料\n        this.newCustomer = {\n          name: \"\",\n          email: \"\"\n        }; // 重置新增表單\n      } catch (error) {\n        console.error(\"新增失敗\", error);\n      }\n    },\n    // 設定為編輯模式\n    editCustomer(customer) {\n      this.editingCustomer = {\n        ...customer\n      }; // 深拷貝以免直接改變原資料\n      console.log(this.editingCustomer);\n    },\n    // 提交更新的客戶資料\n    async submitUpdate() {\n      try {\n        await axios.put(`http://localhost:8888/customers/${this.editingCustomer.id}`, this.editingCustomer);\n        alert(\"更新成功！\");\n        this.fetchCustomers(); // 重新獲取最新的客戶資料\n        this.editingCustomer = null; // 清除編輯狀態\n      } catch (error) {\n        console.error(\"更新失敗\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","customers","newCustomer","name","email","editingCustomer","mounted","fetchCustomers","methods","response","get","error","console","submitNewCustomer","post","alert","editCustomer","customer","log","submitUpdate","put","id"],"sources":["/Users/zana/Pretest/code/frontend/src/components/CustomerPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>客戶資料</h1>\n\n    <!-- 新增客戶表單 -->\n    <h2>新增客戶</h2>\n    <form @submit.prevent=\"submitNewCustomer\">\n      <div>\n        <label for=\"name\">名稱</label>\n        <input type=\"text\" v-model=\"newCustomer.name\" required />\n      </div>\n      <div>\n        <label for=\"email\">電子郵件</label>\n        <input type=\"email\" v-model=\"newCustomer.email\" required />\n      </div>\n      <button type=\"submit\">新增客戶</button>\n    </form>\n\n    <table>\n      <thead>\n        <tr>\n          <th>客戶名稱</th>\n          <th>電子郵件</th>\n          <th>去年總交易金額</th>\n          <th>操作</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"customer in customers\" :key=\"customer.id\">\n          <td>{{ customer.name }}</td>\n          <td>{{ customer.email }}</td>\n          <td>{{ customer.total_amount_last_year }}</td>\n          <td>\n            <button @click=\"editCustomer(customer)\">編輯</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- 編輯客戶資料表單 -->\n    <div v-if=\"editingCustomer\">\n      <h3>編輯客戶</h3>\n      <form @submit.prevent=\"submitUpdate\">\n        <div>\n          <label for=\"editName\">名稱</label>\n          <input type=\"text\" id=\"editName\" v-model=\"editingCustomer.name\" required />\n        </div>\n        <div>\n          <label for=\"editEmail\">電子郵件</label>\n          <input type=\"email\" id=\"editEmail\" v-model=\"editingCustomer.email\" required />\n        </div>\n        <button type=\"submit\">更新資料</button>\n      </form>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: \"\",\n        email: \"\",\n      },  // 用來綁定新增客戶表單的資料\n      editingCustomer: null,\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get(\"http://localhost:8888/customers\");\n        this.customers = response.data;\n      } catch (error) {\n        console.error(\"無法取得客戶資料\", error);\n      }\n    },\n\n    // 提交新增的客戶資料\n    async submitNewCustomer() {\n      try {\n        await axios.post(\"http://localhost:8888/customers\", this.newCustomer);\n        alert(\"新增成功！\");\n        //const response = await axios.post(\"http://localhost:8888/customers\", this.newCustomer);\n        //console.log(response.data);  // 可以查看返回的資料\n        this.fetchCustomers();  // 重新獲取最新的客戶資料\n        this.newCustomer = { name: \"\", email: \"\" };  // 重置新增表單\n      } catch (error) {\n        console.error(\"新增失敗\", error);\n      }\n    },\n\n    // 設定為編輯模式\n    editCustomer(customer) {\n      this.editingCustomer = { ...customer };  // 深拷貝以免直接改變原資料\n      console.log(this.editingCustomer);\n    },\n\n    // 提交更新的客戶資料\n    async submitUpdate() {\n      try {\n        await axios.put(\n          `http://localhost:8888/customers/${this.editingCustomer.id}`,\n          this.editingCustomer\n        );\n        alert(\"更新成功！\");\n        this.fetchCustomers();  // 重新獲取最新的客戶資料\n        this.editingCustomer = null;  // 清除編輯狀態\n      } catch (error) {\n        console.error(\"更新失敗\", error);\n      }\n    },\n\n  },\n};\n</script>\n"],"mappings":"AA2DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT,CAAC;MAAG;MACJC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;QACnE,IAAI,CAACT,SAAQ,GAAIQ,QAAQ,CAACT,IAAI;MAChC,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF,CAAC;IAED;IACA,MAAME,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMd,KAAK,CAACe,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAACZ,WAAW,CAAC;QACrEa,KAAK,CAAC,OAAO,CAAC;QACd;QACA;QACA,IAAI,CAACR,cAAc,CAAC,CAAC,EAAG;QACxB,IAAI,CAACL,WAAU,GAAI;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC,EAAG;MAC/C,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,MAAM,EAAEA,KAAK,CAAC;MAC9B;IACF,CAAC;IAED;IACAK,YAAYA,CAACC,QAAQ,EAAE;MACrB,IAAI,CAACZ,eAAc,GAAI;QAAE,GAAGY;MAAS,CAAC,EAAG;MACzCL,OAAO,CAACM,GAAG,CAAC,IAAI,CAACb,eAAe,CAAC;IACnC,CAAC;IAED;IACA,MAAMc,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMpB,KAAK,CAACqB,GAAG,CACb,mCAAmC,IAAI,CAACf,eAAe,CAACgB,EAAE,EAAE,EAC5D,IAAI,CAAChB,eACP,CAAC;QACDU,KAAK,CAAC,OAAO,CAAC;QACd,IAAI,CAACR,cAAc,CAAC,CAAC,EAAG;QACxB,IAAI,CAACF,eAAc,GAAI,IAAI,EAAG;MAChC,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,MAAM,EAAEA,KAAK,CAAC;MAC9B;IACF;EAEF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
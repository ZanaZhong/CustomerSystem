{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"客戶資料\", -1)), _cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"查詢客戶交易紀錄\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.fetchCustomerTransactions && $options.fetchCustomerTransactions(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"customerSelect\"\n  }, \"選擇客戶\", -1)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedCustomerId = $event),\n    id: \"customerSelect\",\n    required: \"\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: customer.id,\n      value: customer.id\n    }, _toDisplayString(customer.name), 9, _hoisted_1);\n  }), 128))], 512), [[_vModelSelect, $data.selectedCustomerId]])]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"startDate\"\n  }, \"開始日期\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"startDate\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.startDate = $event),\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.startDate]])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"endDate\"\n  }, \"結束日期\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"endDate\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.endDate = $event),\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.endDate]])]), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"查詢交易紀錄\", -1))], 32), $data.transactions.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"客戶\"), _createElementVNode(\"th\", null, \"交易日期\"), _createElementVNode(\"th\", null, \"金額\")])], -1)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.transactions, transaction => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: transaction.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(transaction.id), 1), _createElementVNode(\"td\", null, _toDisplayString(transaction.date), 1), _createElementVNode(\"td\", null, _toDisplayString(transaction.amount), 1)]);\n  }), 128))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"尚未查詢到交易紀錄\"))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","fetchCustomerTransactions","for","$event","$data","selectedCustomerId","id","required","_Fragment","_renderList","customers","customer","value","name","_hoisted_1","type","startDate","endDate","transactions","length","_hoisted_2","transaction","_toDisplayString","date","amount","_hoisted_3"],"sources":["/Users/zana/Pretest/code/frontend/src/components/TransactionPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>客戶資料</h1>\n\n    <!-- 交易紀錄查詢表單 -->\n    <h2>查詢客戶交易紀錄</h2>\n    <form @submit.prevent=\"fetchCustomerTransactions\">\n      <div>\n        <label for=\"customerSelect\">選擇客戶</label>\n        <select v-model=\"selectedCustomerId\" id=\"customerSelect\" required>\n          <option v-for=\"customer in customers\" :key=\"customer.id\" :value=\"customer.id\">\n            {{ customer.name }}\n          </option>\n        </select>\n      </div>\n      <div>\n        <label for=\"startDate\">開始日期</label>\n        <input type=\"date\" id=\"startDate\" v-model=\"startDate\" required />\n      </div>\n      <div>\n        <label for=\"endDate\">結束日期</label>\n        <input type=\"date\" id=\"endDate\" v-model=\"endDate\" required />\n      </div>\n      <button type=\"submit\">查詢交易紀錄</button>\n    </form>\n\n    <!-- 顯示交易紀錄 -->\n    <table v-if=\"transactions.length > 0\">\n      <thead>\n        <tr>\n          <th>客戶</th>\n          <th>交易日期</th>\n          <th>金額</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"transaction in transactions\" :key=\"transaction.id\">\n          <td>{{ transaction.id }}</td>\n          <td>{{ transaction.date }}</td>\n          <td>{{ transaction.amount }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <p v-else>尚未查詢到交易紀錄</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      selectedCustomerId: null,\n      startDate: '',\n      endDate: '',\n      transactions: [],\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get('http://localhost:8888/customers');\n        this.customers = response.data;\n      } catch (error) {\n        console.error('無法取得客戶資料', error);\n      }\n    },\n\n    // 查詢指定客戶及時間範圍的交易紀錄\n    async fetchCustomerTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:8888/transactions/${this.selectedCustomerId}`, {\n          params: {\n            startDate: this.startDate,\n            endDate: this.endDate,\n          },\n        });\n        this.transactions = response.data; // 使用正確格式解析資料\n      } catch (error) {\n        alert(`查詢失敗: ${error.response?.data?.error || '伺服器錯誤'}`);\n        console.error('查詢交易紀錄失敗', error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";mBAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CA4CM,c,0BA3CJC,mBAAA,CAAa,YAAT,MAAI,Q,4BAGRA,mBAAA,CAAiB,YAAb,UAAQ,QACZA,mBAAA,CAkBO;IAlBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MANjBC,cAAA,KAAAC,IAAA,KAM2BC,QAAA,CAAAC,yBAAA,IAAAD,QAAA,CAAAC,yBAAA,IAAAF,IAAA,CAAyB;MAC9CJ,mBAAA,CAOM,c,0BANJA,mBAAA,CAAwC;IAAjCO,GAAG,EAAC;EAAgB,GAAC,MAAI,Q,gBAChCP,mBAAA,CAIS;IAbjB,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IASyBC,KAAA,CAAAC,kBAAkB,GAAAF,MAAA;IAAEG,EAAE,EAAC,gBAAgB;IAACC,QAAQ,EAAR;yBACvDb,mBAAA,CAESc,SAAA,QAZnBC,WAAA,CAUqCL,KAAA,CAAAM,SAAS,EAArBC,QAAQ;yBAAvBjB,mBAAA,CAES;MAF8BD,GAAG,EAAEkB,QAAQ,CAACL,EAAE;MAAGM,KAAK,EAAED,QAAQ,CAACL;wBACrEK,QAAQ,CAACE,IAAI,MAX5BC,UAAA;qCASyBV,KAAA,CAAAC,kBAAkB,E,KAMrCV,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAmC;IAA5BO,GAAG,EAAC;EAAW,GAAC,MAAI,Q,gBAC3BP,mBAAA,CAAiE;IAA1DoB,IAAI,EAAC,MAAM;IAACT,EAAE,EAAC,WAAW;IAjBzC,uBAAAT,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAiBmDC,KAAA,CAAAY,SAAS,GAAAb,MAAA;IAAEI,QAAQ,EAAR;gCAAXH,KAAA,CAAAY,SAAS,E,KAEtDrB,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiC;IAA1BO,GAAG,EAAC;EAAS,GAAC,MAAI,Q,gBACzBP,mBAAA,CAA6D;IAAtDoB,IAAI,EAAC,MAAM;IAACT,EAAE,EAAC,SAAS;IArBvC,uBAAAT,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAqBiDC,KAAA,CAAAa,OAAO,GAAAd,MAAA;IAAEI,QAAQ,EAAR;gCAATH,KAAA,CAAAa,OAAO,E,+BAElDtB,mBAAA,CAAqC;IAA7BoB,IAAI,EAAC;EAAQ,GAAC,QAAM,O,OAIjBX,KAAA,CAAAc,YAAY,CAACC,MAAM,Q,cAAhCzB,mBAAA,CAeQ,SA1CZ0B,UAAA,G,0BA4BMzB,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAW,YAAP,IAAE,E,UAGVA,mBAAA,CAMQ,iB,kBALND,mBAAA,CAIKc,SAAA,QAxCbC,WAAA,CAoCkCL,KAAA,CAAAc,YAAY,EAA3BG,WAAW;yBAAtB3B,mBAAA,CAIK;MAJoCD,GAAG,EAAE4B,WAAW,CAACf;QACxDX,mBAAA,CAA6B,YAAA2B,gBAAA,CAAtBD,WAAW,CAACf,EAAE,OACrBX,mBAAA,CAA+B,YAAA2B,gBAAA,CAAxBD,WAAW,CAACE,IAAI,OACvB5B,mBAAA,CAAiC,YAAA2B,gBAAA,CAA1BD,WAAW,CAACG,MAAM,M;kCAK/B9B,mBAAA,CAAuB,KA5C3B+B,UAAA,EA4Cc,WAAS,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: \"\",\n        email: \"\"\n      },\n      editingCustomer: null // 用來存儲正在編輯的客戶\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/customers\");\n        this.customers = response.data;\n      } catch (error) {\n        console.error(\"無法取得客戶資料\", error);\n      }\n    },\n    // 編輯客戶資料\n    editCustomer(customer) {\n      this.editingCustomer = {\n        ...customer\n      }; // 將該客戶的資料拷貝到編輯表單中\n    },\n    // 更新客戶資料\n    async updateCustomer() {\n      try {\n        await axios.put(`http://localhost:8080/customers/${this.editingCustomer.id}`, this.editingCustomer);\n        this.fetchCustomers(); // 更新客戶列表\n        this.editingCustomer = null; // 重置編輯狀態\n      } catch (error) {\n        console.error(\"更新客戶資料失敗\", error);\n      }\n    },\n    // 新增客戶資料\n    async addCustomer() {\n      try {\n        await axios.post(\"http://localhost:8080/customers\", this.newCustomer);\n        this.fetchCustomers(); // 更新客戶列表\n        this.newCustomer = {\n          name: \"\",\n          email: \"\"\n        }; // 清空新增表單\n      } catch (error) {\n        console.error(\"新增客戶資料失敗\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","customers","newCustomer","name","email","editingCustomer","mounted","fetchCustomers","methods","response","get","error","console","editCustomer","customer","updateCustomer","put","id","addCustomer","post"],"sources":["/Users/zana/Pretest/code/frontend/src/components/CustomerPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>客戶頁面</h1>\n\n    <!-- 顯示所有客戶 -->\n    <ul>\n      <li v-for=\"customer in customers\" :key=\"customer.id\">\n        <div>\n          <p>姓名: {{ customer.name }}</p>\n          <p>電子郵件: {{ customer.email }}</p>\n          <p>創建日期: {{ customer.created_at }}</p>\n          <p>過去一年的交易金額: {{ customer.total_amount_last_year }}</p>\n\n          <!-- 編輯按鈕 -->\n          <button @click=\"editCustomer(customer)\">編輯</button>\n        </div>\n      </li>\n    </ul>\n\n    <!-- 新增客戶表單 -->\n    <div>\n      <h2>新增客戶</h2>\n      <form @submit.prevent=\"addCustomer\">\n        <div>\n          <label for=\"name\">姓名:</label>\n          <input v-model=\"newCustomer.name\" id=\"name\" type=\"text\" required />\n        </div>\n        <div>\n          <label for=\"email\">電子郵件:</label>\n          <input v-model=\"newCustomer.email\" id=\"email\" type=\"email\" required />\n        </div>\n        <button type=\"submit\">新增客戶</button>\n      </form>\n    </div>\n\n    <!-- 編輯客戶表單 -->\n    <div v-if=\"editingCustomer\">\n      <h2>編輯客戶資料</h2>\n      <form @submit.prevent=\"updateCustomer\">\n        <div>\n          <label for=\"editName\">姓名:</label>\n          <input v-model=\"editingCustomer.name\" id=\"editName\" type=\"text\" required />\n        </div>\n        <div>\n          <label for=\"editEmail\">電子郵件:</label>\n          <input v-model=\"editingCustomer.email\" id=\"editEmail\" type=\"email\" required />\n        </div>\n        <button type=\"submit\">更新客戶</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      newCustomer: {\n        name: \"\",\n        email: \"\",\n      },\n      editingCustomer: null, // 用來存儲正在編輯的客戶\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/customers\");\n        this.customers = response.data;\n      } catch (error) {\n        console.error(\"無法取得客戶資料\", error);\n      }\n    },\n\n    // 編輯客戶資料\n    editCustomer(customer) {\n      this.editingCustomer = { ...customer }; // 將該客戶的資料拷貝到編輯表單中\n    },\n\n    // 更新客戶資料\n    async updateCustomer() {\n      try {\n        await axios.put(`http://localhost:8080/customers/${this.editingCustomer.id}`, this.editingCustomer);\n        this.fetchCustomers(); // 更新客戶列表\n        this.editingCustomer = null; // 重置編輯狀態\n      } catch (error) {\n        console.error(\"更新客戶資料失敗\", error);\n      }\n    },\n\n    // 新增客戶資料\n    async addCustomer() {\n      try {\n        await axios.post(\"http://localhost:8080/customers\", this.newCustomer);\n        this.fetchCustomers(); // 更新客戶列表\n        this.newCustomer = { name: \"\", email: \"\" }; // 清空新增表單\n      } catch (error) {\n        console.error(\"新增客戶資料失敗\", error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 可以根據需求設計頁面的樣式 */\nform {\n  margin-top: 20px;\n}\n\ninput {\n  margin-right: 10px;\n}\n\nbutton {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"AAsDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT,CAAC;MACDC,eAAe,EAAE,IAAI,CAAE;IACzB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;QACnE,IAAI,CAACT,SAAQ,GAAIQ,QAAQ,CAACT,IAAI;MAChC,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF,CAAC;IAED;IACAE,YAAYA,CAACC,QAAQ,EAAE;MACrB,IAAI,CAACT,eAAc,GAAI;QAAE,GAAGS;MAAS,CAAC,EAAE;IAC1C,CAAC;IAED;IACA,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMhB,KAAK,CAACiB,GAAG,CAAC,mCAAmC,IAAI,CAACX,eAAe,CAACY,EAAE,EAAE,EAAE,IAAI,CAACZ,eAAe,CAAC;QACnG,IAAI,CAACE,cAAc,CAAC,CAAC,EAAE;QACvB,IAAI,CAACF,eAAc,GAAI,IAAI,EAAE;MAC/B,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF,CAAC;IAED;IACA,MAAMO,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMnB,KAAK,CAACoB,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAACjB,WAAW,CAAC;QACrE,IAAI,CAACK,cAAc,CAAC,CAAC,EAAE;QACvB,IAAI,CAACL,WAAU,GAAI;UAAEC,IAAI,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAG,CAAC,EAAE;MAC9C,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
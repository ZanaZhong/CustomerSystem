{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"form-group mt-3\"\n};\nconst _hoisted_5 = {\n  class: \"form-group mt-3\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"mt-4\"\n};\nconst _hoisted_7 = {\n  class: \"table table-bordered table-striped customer-table\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"mt-3 text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[10] || (_cache[10] = _createElementVNode(\"h1\", {\n    class: \"text-center mb-4\"\n  }, \"客戶資料\", -1 /* HOISTED */)), _createCommentVNode(\" 交易紀錄查詢表單 \"), _cache[11] || (_cache[11] = _createElementVNode(\"h2\", {\n    class: \"mb-3\"\n  }, \"查詢客戶交易紀錄\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.fetchCustomerTransactions && $options.fetchCustomerTransactions(...args), [\"prevent\"])),\n    class: \"card p-4 shadow-sm\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"customerSelect\",\n    class: \"form-label\"\n  }, \"選擇客戶\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedCustomerId = $event),\n    id: \"customerSelect\",\n    class: \"form-control\",\n    required: \"\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.customers, customer => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: customer.id,\n      value: customer.id\n    }, _toDisplayString(customer.name), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedCustomerId]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"startDate\",\n    class: \"form-label\"\n  }, \"開始日期\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"startDate\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.startDate = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startDate]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"endDate\",\n    class: \"form-label\"\n  }, \"結束日期\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"endDate\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.endDate = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endDate]])]), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary btn-block mt-4\"\n  }, \"查詢交易紀錄\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 顯示交易紀錄 \"), $data.transactions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"交易紀錄\", -1 /* HOISTED */)), _createElementVNode(\"table\", _hoisted_7, [_cache[8] || (_cache[8] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"客戶\"), _createElementVNode(\"th\", null, \"交易日期\"), _createElementVNode(\"th\", null, \"金額\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.transactions, transaction => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: transaction.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(transaction.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(transaction.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(transaction.amount), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"尚未查詢到交易紀錄\"))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","fetchCustomerTransactions","_hoisted_2","for","$event","$data","selectedCustomerId","id","required","_Fragment","_renderList","customers","customer","value","name","_hoisted_3","_hoisted_4","type","startDate","_hoisted_5","endDate","transactions","length","_hoisted_6","_hoisted_7","transaction","_toDisplayString","date","amount","_hoisted_8"],"sources":["/app/src/components/TransactionPage.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h1 class=\"text-center mb-4\">客戶資料</h1>\n\n    <!-- 交易紀錄查詢表單 -->\n    <h2 class=\"mb-3\">查詢客戶交易紀錄</h2>\n    <form @submit.prevent=\"fetchCustomerTransactions\" class=\"card p-4 shadow-sm\">\n      <div class=\"form-group\">\n        <label for=\"customerSelect\" class=\"form-label\">選擇客戶</label>\n        <select v-model=\"selectedCustomerId\" id=\"customerSelect\" class=\"form-control\" required>\n          <option v-for=\"customer in customers\" :key=\"customer.id\" :value=\"customer.id\">\n            {{ customer.name }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"form-group mt-3\">\n        <label for=\"startDate\" class=\"form-label\">開始日期</label>\n        <input type=\"date\" id=\"startDate\" v-model=\"startDate\" class=\"form-control\" required />\n      </div>\n\n      <div class=\"form-group mt-3\">\n        <label for=\"endDate\" class=\"form-label\">結束日期</label>\n        <input type=\"date\" id=\"endDate\" v-model=\"endDate\" class=\"form-control\" required />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary btn-block mt-4\">查詢交易紀錄</button>\n    </form>\n\n    <!-- 顯示交易紀錄 -->\n    <div v-if=\"transactions.length > 0\" class=\"mt-4\">\n      <h3>交易紀錄</h3>\n      <table class=\"table table-bordered table-striped customer-table\" >\n        <thead>\n          <tr>\n            <th>客戶</th>\n            <th>交易日期</th>\n            <th>金額</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"transaction in transactions\" :key=\"transaction.id\">\n            <td>{{ transaction.id }}</td>\n            <td>{{ transaction.date }}</td>\n            <td>{{ transaction.amount }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <p v-else class=\"mt-3 text-center\">尚未查詢到交易紀錄</p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      customers: [],\n      selectedCustomerId: null,\n      startDate: '',\n      endDate: '',\n      transactions: [],\n    };\n  },\n  mounted() {\n    this.fetchCustomers();\n  },\n  methods: {\n    // 獲取所有客戶資料\n    async fetchCustomers() {\n      try {\n        const response = await axios.get('http://localhost:8888/customers');\n        this.customers = response.data;\n      } catch (error) {\n        console.error('無法取得客戶資料', error);\n      }\n    },\n\n    // 查詢指定客戶及時間範圍的交易紀錄\n    async fetchCustomerTransactions() {\n      try {\n        const response = await axios.get(`http://localhost:8888/transactions/${this.selectedCustomerId}`, {\n          params: {\n            startDate: this.startDate,\n            endDate: this.endDate,\n          },\n        });\n        this.transactions = response.data; // 使用正確格式解析資料\n      } catch (error) {\n        alert(`查詢失敗: ${error.response?.data?.error || '伺服器錯誤'}`);\n        console.error('查詢交易紀錄失敗', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.card {\n  max-width: 600px;\n  margin: auto;\n}\n\n.form-group label {\n  font-weight: bold;\n}\n\n.form-control {\n  border-radius: 4px;\n}\n\n.btn-block {\n  width: 100%;\n}\n\n.table th {\n  background-color: #f8f9fa;\n}\n\n.table-bordered {\n  border: 1px solid #dee2e6;\n}\n\n.table th, .table td {\n  text-align: center;\n}\n\n.customer-table th,\n.customer-table td {\n  padding: 10px 15px;\n  border: 1px solid #ddd;\n  text-align: center;\n}\n\n.customer-table th {\n  background-color: #2c3e50;\n  color: #ffffff;\n}\n\n.customer-table tr:nth-child(even) {\n  background-color: #f9f9f9;\n}\n\n.customer-table tr:hover {\n  background-color: #f1f1f1;\n}\n\n/* 響應式 */\n@media (max-width: 768px) {\n  .container {\n    padding: 15px;\n  }\n  .card {\n    margin-top: 20px;\n  }\n}\n\n/* 針對不同尺寸的 mt-* 類別設定，控制上邊距 */\n.mt-0 {\n  margin-top: 0 !important;\n}\n\n.mt-1 {\n  margin-top: 0.25rem !important;\n}\n\n.mt-2 {\n  margin-top: 0.5rem !important;\n}\n\n.mt-3 {\n  margin-top: 1rem !important;\n}\n\n.mt-4 {\n  margin-top: 1.5rem !important;\n}\n\n.mt-5 {\n  margin-top: 3rem !important;\n}\n\n/* 對於更大的邊距設定 */\n.mt-auto {\n  margin-top: auto !important; /* 自動調整上邊距 */\n}\n\n</style>\n\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}